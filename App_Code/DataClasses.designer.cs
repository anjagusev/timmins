#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="timmins")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertpage(page instance);
  partial void Updatepage(page instance);
  partial void Deletepage(page instance);
  partial void Insertsubject(subject instance);
  partial void Updatesubject(subject instance);
  partial void Deletesubject(subject instance);
  partial void InsertSiteMap(SiteMap instance);
  partial void UpdateSiteMap(SiteMap instance);
  partial void DeleteSiteMap(SiteMap instance);
  partial void InsertSurveyQuestion(SurveyQuestion instance);
  partial void UpdateSurveyQuestion(SurveyQuestion instance);
  partial void DeleteSurveyQuestion(SurveyQuestion instance);
  partial void InsertSurvey(Survey instance);
  partial void UpdateSurvey(Survey instance);
  partial void DeleteSurvey(Survey instance);
  partial void InsertSurveyResponse(SurveyResponse instance);
  partial void UpdateSurveyResponse(SurveyResponse instance);
  partial void DeleteSurveyResponse(SurveyResponse instance);
  partial void InsertQuestion(Question instance);
  partial void UpdateQuestion(Question instance);
  partial void DeleteQuestion(Question instance);
  partial void Inserttbl_donation(tbl_donation instance);
  partial void Updatetbl_donation(tbl_donation instance);
  partial void Deletetbl_donation(tbl_donation instance);
  partial void Inserttbl_service(tbl_service instance);
  partial void Updatetbl_service(tbl_service instance);
  partial void Deletetbl_service(tbl_service instance);
  partial void Inserttbl_specialty(tbl_specialty instance);
  partial void Updatetbl_specialty(tbl_specialty instance);
  partial void Deletetbl_specialty(tbl_specialty instance);
  partial void Inserttbl_doctor(tbl_doctor instance);
  partial void Updatetbl_doctor(tbl_doctor instance);
  partial void Deletetbl_doctor(tbl_doctor instance);
  partial void Inserttbl_subscriber(tbl_subscriber instance);
  partial void Updatetbl_subscriber(tbl_subscriber instance);
  partial void Deletetbl_subscriber(tbl_subscriber instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["timminsConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<page> pages
	{
		get
		{
			return this.GetTable<page>();
		}
	}
	
	public System.Data.Linq.Table<subject> subjects
	{
		get
		{
			return this.GetTable<subject>();
		}
	}
	
	public System.Data.Linq.Table<SiteMap> SiteMaps
	{
		get
		{
			return this.GetTable<SiteMap>();
		}
	}
	
	public System.Data.Linq.Table<SurveyQuestion> SurveyQuestions
	{
		get
		{
			return this.GetTable<SurveyQuestion>();
		}
	}
	
	public System.Data.Linq.Table<Survey> Surveys
	{
		get
		{
			return this.GetTable<Survey>();
		}
	}
	
	public System.Data.Linq.Table<SurveyResponse> SurveyResponses
	{
		get
		{
			return this.GetTable<SurveyResponse>();
		}
	}
	
	public System.Data.Linq.Table<Question> Questions
	{
		get
		{
			return this.GetTable<Question>();
		}
	}
	
	public System.Data.Linq.Table<AdminSiteMap> AdminSiteMaps
	{
		get
		{
			return this.GetTable<AdminSiteMap>();
		}
	}
	
	public System.Data.Linq.Table<tbl_donation> tbl_donations
	{
		get
		{
			return this.GetTable<tbl_donation>();
		}
	}
	
	public System.Data.Linq.Table<tbl_service> tbl_services
	{
		get
		{
			return this.GetTable<tbl_service>();
		}
	}
	
	public System.Data.Linq.Table<tbl_specialty> tbl_specialties
	{
		get
		{
			return this.GetTable<tbl_specialty>();
		}
	}
	
	public System.Data.Linq.Table<tbl_doctor> tbl_doctors
	{
		get
		{
			return this.GetTable<tbl_doctor>();
		}
	}
	
	public System.Data.Linq.Table<tbl_subscriber> tbl_subscribers
	{
		get
		{
			return this.GetTable<tbl_subscriber>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.pages")]
public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _subject_id;
	
	private string _menu_name;
	
	private System.Nullable<decimal> _position;
	
	private System.Data.Linq.Binary _visible;
	
	private string _page_content;
	
	private string _images;
	
	private string _uploads;
	
	private string _title;
	
	private EntityRef<subject> _subject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsubject_idChanging(System.Nullable<int> value);
    partial void Onsubject_idChanged();
    partial void Onmenu_nameChanging(string value);
    partial void Onmenu_nameChanged();
    partial void OnpositionChanging(System.Nullable<decimal> value);
    partial void OnpositionChanged();
    partial void OnvisibleChanging(System.Data.Linq.Binary value);
    partial void OnvisibleChanged();
    partial void Onpage_contentChanging(string value);
    partial void Onpage_contentChanged();
    partial void OnimagesChanging(string value);
    partial void OnimagesChanged();
    partial void OnuploadsChanging(string value);
    partial void OnuploadsChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
	
	public page()
	{
		this._subject = default(EntityRef<subject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_id", DbType="Int")]
	public System.Nullable<int> subject_id
	{
		get
		{
			return this._subject_id;
		}
		set
		{
			if ((this._subject_id != value))
			{
				if (this._subject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onsubject_idChanging(value);
				this.SendPropertyChanging();
				this._subject_id = value;
				this.SendPropertyChanged("subject_id");
				this.Onsubject_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_name", DbType="NVarChar(50)")]
	public string menu_name
	{
		get
		{
			return this._menu_name;
		}
		set
		{
			if ((this._menu_name != value))
			{
				this.Onmenu_nameChanging(value);
				this.SendPropertyChanging();
				this._menu_name = value;
				this.SendPropertyChanged("menu_name");
				this.Onmenu_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> position
	{
		get
		{
			return this._position;
		}
		set
		{
			if ((this._position != value))
			{
				this.OnpositionChanging(value);
				this.SendPropertyChanging();
				this._position = value;
				this.SendPropertyChanged("position");
				this.OnpositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary visible
	{
		get
		{
			return this._visible;
		}
		set
		{
			if ((this._visible != value))
			{
				this.OnvisibleChanging(value);
				this.SendPropertyChanging();
				this._visible = value;
				this.SendPropertyChanged("visible");
				this.OnvisibleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_content", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string page_content
	{
		get
		{
			return this._page_content;
		}
		set
		{
			if ((this._page_content != value))
			{
				this.Onpage_contentChanging(value);
				this.SendPropertyChanging();
				this._page_content = value;
				this.SendPropertyChanged("page_content");
				this.Onpage_contentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_images", DbType="NVarChar(50)")]
	public string images
	{
		get
		{
			return this._images;
		}
		set
		{
			if ((this._images != value))
			{
				this.OnimagesChanging(value);
				this.SendPropertyChanging();
				this._images = value;
				this.SendPropertyChanged("images");
				this.OnimagesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploads", DbType="NVarChar(50)")]
	public string uploads
	{
		get
		{
			return this._uploads;
		}
		set
		{
			if ((this._uploads != value))
			{
				this.OnuploadsChanging(value);
				this.SendPropertyChanging();
				this._uploads = value;
				this.SendPropertyChanged("uploads");
				this.OnuploadsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_page", Storage="_subject", ThisKey="subject_id", OtherKey="id", IsForeignKey=true)]
	public subject subject
	{
		get
		{
			return this._subject.Entity;
		}
		set
		{
			subject previousValue = this._subject.Entity;
			if (((previousValue != value) 
						|| (this._subject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._subject.Entity = null;
					previousValue.pages.Remove(this);
				}
				this._subject.Entity = value;
				if ((value != null))
				{
					value.pages.Add(this);
					this._subject_id = value.id;
				}
				else
				{
					this._subject_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("subject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.subject")]
public partial class subject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _menu_name;
	
	private System.Nullable<decimal> _position;
	
	private System.Nullable<bool> _visible;
	
	private EntitySet<page> _pages;
	
	private EntitySet<SiteMap> _SiteMaps;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmenu_nameChanging(string value);
    partial void Onmenu_nameChanged();
    partial void OnpositionChanging(System.Nullable<decimal> value);
    partial void OnpositionChanged();
    partial void OnvisibleChanging(System.Nullable<bool> value);
    partial void OnvisibleChanged();
    #endregion
	
	public subject()
	{
		this._pages = new EntitySet<page>(new Action<page>(this.attach_pages), new Action<page>(this.detach_pages));
		this._SiteMaps = new EntitySet<SiteMap>(new Action<SiteMap>(this.attach_SiteMaps), new Action<SiteMap>(this.detach_SiteMaps));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string menu_name
	{
		get
		{
			return this._menu_name;
		}
		set
		{
			if ((this._menu_name != value))
			{
				this.Onmenu_nameChanging(value);
				this.SendPropertyChanging();
				this._menu_name = value;
				this.SendPropertyChanged("menu_name");
				this.Onmenu_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> position
	{
		get
		{
			return this._position;
		}
		set
		{
			if ((this._position != value))
			{
				this.OnpositionChanging(value);
				this.SendPropertyChanging();
				this._position = value;
				this.SendPropertyChanged("position");
				this.OnpositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Bit")]
	public System.Nullable<bool> visible
	{
		get
		{
			return this._visible;
		}
		set
		{
			if ((this._visible != value))
			{
				this.OnvisibleChanging(value);
				this.SendPropertyChanging();
				this._visible = value;
				this.SendPropertyChanged("visible");
				this.OnvisibleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_page", Storage="_pages", ThisKey="id", OtherKey="subject_id")]
	public EntitySet<page> pages
	{
		get
		{
			return this._pages;
		}
		set
		{
			this._pages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_SiteMap", Storage="_SiteMaps", ThisKey="id", OtherKey="SubjectID")]
	public EntitySet<SiteMap> SiteMaps
	{
		get
		{
			return this._SiteMaps;
		}
		set
		{
			this._SiteMaps.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_pages(page entity)
	{
		this.SendPropertyChanging();
		entity.subject = this;
	}
	
	private void detach_pages(page entity)
	{
		this.SendPropertyChanging();
		entity.subject = null;
	}
	
	private void attach_SiteMaps(SiteMap entity)
	{
		this.SendPropertyChanging();
		entity.subject = this;
	}
	
	private void detach_SiteMaps(SiteMap entity)
	{
		this.SendPropertyChanging();
		entity.subject = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.SiteMap")]
public partial class SiteMap : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Url;
	
	private string _Title;
	
	private string _Description;
	
	private System.Nullable<int> _ParentID;
	
	private System.Nullable<int> _OrdinalPosition;
	
	private System.Nullable<int> _SubjectID;
	
	private EntityRef<subject> _subject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnOrdinalPositionChanging(System.Nullable<int> value);
    partial void OnOrdinalPositionChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    #endregion
	
	public SiteMap()
	{
		this._subject = default(EntityRef<subject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(100)")]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdinalPosition", DbType="Int")]
	public System.Nullable<int> OrdinalPosition
	{
		get
		{
			return this._OrdinalPosition;
		}
		set
		{
			if ((this._OrdinalPosition != value))
			{
				this.OnOrdinalPositionChanging(value);
				this.SendPropertyChanging();
				this._OrdinalPosition = value;
				this.SendPropertyChanged("OrdinalPosition");
				this.OnOrdinalPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
	public System.Nullable<int> SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				if (this._subject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_SiteMap", Storage="_subject", ThisKey="SubjectID", OtherKey="id", IsForeignKey=true)]
	public subject subject
	{
		get
		{
			return this._subject.Entity;
		}
		set
		{
			subject previousValue = this._subject.Entity;
			if (((previousValue != value) 
						|| (this._subject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._subject.Entity = null;
					previousValue.SiteMaps.Remove(this);
				}
				this._subject.Entity = value;
				if ((value != null))
				{
					value.SiteMaps.Add(this);
					this._SubjectID = value.id;
				}
				else
				{
					this._SubjectID = default(Nullable<int>);
				}
				this.SendPropertyChanged("subject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SurveyQuestions")]
public partial class SurveyQuestion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _QuestionID;
	
	private System.Nullable<int> _SurveyID;
	
	private EntityRef<Survey> _Survey;
	
	private EntityRef<Question> _Question;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestionIDChanging(System.Nullable<int> value);
    partial void OnQuestionIDChanged();
    partial void OnSurveyIDChanging(System.Nullable<int> value);
    partial void OnSurveyIDChanged();
    #endregion
	
	public SurveyQuestion()
	{
		this._Survey = default(EntityRef<Survey>);
		this._Question = default(EntityRef<Question>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int")]
	public System.Nullable<int> QuestionID
	{
		get
		{
			return this._QuestionID;
		}
		set
		{
			if ((this._QuestionID != value))
			{
				if (this._Question.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnQuestionIDChanging(value);
				this.SendPropertyChanging();
				this._QuestionID = value;
				this.SendPropertyChanged("QuestionID");
				this.OnQuestionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyID", DbType="Int")]
	public System.Nullable<int> SurveyID
	{
		get
		{
			return this._SurveyID;
		}
		set
		{
			if ((this._SurveyID != value))
			{
				if (this._Survey.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSurveyIDChanging(value);
				this.SendPropertyChanging();
				this._SurveyID = value;
				this.SendPropertyChanged("SurveyID");
				this.OnSurveyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_SurveyQuestion", Storage="_Survey", ThisKey="SurveyID", OtherKey="ID", IsForeignKey=true)]
	public Survey Survey
	{
		get
		{
			return this._Survey.Entity;
		}
		set
		{
			Survey previousValue = this._Survey.Entity;
			if (((previousValue != value) 
						|| (this._Survey.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Survey.Entity = null;
					previousValue.SurveyQuestions.Remove(this);
				}
				this._Survey.Entity = value;
				if ((value != null))
				{
					value.SurveyQuestions.Add(this);
					this._SurveyID = value.ID;
				}
				else
				{
					this._SurveyID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Survey");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_SurveyQuestion", Storage="_Question", ThisKey="QuestionID", OtherKey="ID", IsForeignKey=true)]
	public Question Question
	{
		get
		{
			return this._Question.Entity;
		}
		set
		{
			Question previousValue = this._Question.Entity;
			if (((previousValue != value) 
						|| (this._Question.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Question.Entity = null;
					previousValue.SurveyQuestions.Remove(this);
				}
				this._Question.Entity = value;
				if ((value != null))
				{
					value.SurveyQuestions.Add(this);
					this._QuestionID = value.ID;
				}
				else
				{
					this._QuestionID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Question");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Surveys")]
public partial class Survey : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private string _Description;
	
	private System.DateTime _CreatedDate;
	
	private System.Nullable<System.DateTime> _ExpiresOn;
	
	private System.Nullable<int> _CreatedBy;
	
	private string _Status;
	
	private EntitySet<SurveyQuestion> _SurveyQuestions;
	
	private EntitySet<SurveyResponse> _SurveyResponses;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnExpiresOnChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiresOnChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
	
	public Survey()
	{
		this._SurveyQuestions = new EntitySet<SurveyQuestion>(new Action<SurveyQuestion>(this.attach_SurveyQuestions), new Action<SurveyQuestion>(this.detach_SurveyQuestions));
		this._SurveyResponses = new EntitySet<SurveyResponse>(new Action<SurveyResponse>(this.attach_SurveyResponses), new Action<SurveyResponse>(this.detach_SurveyResponses));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpiresOn
	{
		get
		{
			return this._ExpiresOn;
		}
		set
		{
			if ((this._ExpiresOn != value))
			{
				this.OnExpiresOnChanging(value);
				this.SendPropertyChanging();
				this._ExpiresOn = value;
				this.SendPropertyChanged("ExpiresOn");
				this.OnExpiresOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_SurveyQuestion", Storage="_SurveyQuestions", ThisKey="ID", OtherKey="SurveyID")]
	public EntitySet<SurveyQuestion> SurveyQuestions
	{
		get
		{
			return this._SurveyQuestions;
		}
		set
		{
			this._SurveyQuestions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_SurveyResponse", Storage="_SurveyResponses", ThisKey="ID", OtherKey="SurveyID")]
	public EntitySet<SurveyResponse> SurveyResponses
	{
		get
		{
			return this._SurveyResponses;
		}
		set
		{
			this._SurveyResponses.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SurveyQuestions(SurveyQuestion entity)
	{
		this.SendPropertyChanging();
		entity.Survey = this;
	}
	
	private void detach_SurveyQuestions(SurveyQuestion entity)
	{
		this.SendPropertyChanging();
		entity.Survey = null;
	}
	
	private void attach_SurveyResponses(SurveyResponse entity)
	{
		this.SendPropertyChanging();
		entity.Survey = this;
	}
	
	private void detach_SurveyResponses(SurveyResponse entity)
	{
		this.SendPropertyChanging();
		entity.Survey = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SurveyResponse")]
public partial class SurveyResponse : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _SurveyID;
	
	private int _QuestionID;
	
	private string _Value;
	
	private System.Nullable<int> _FilledBy;
	
	private EntityRef<Survey> _Survey;
	
	private EntityRef<Question> _Question;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSurveyIDChanging(int value);
    partial void OnSurveyIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnFilledByChanging(System.Nullable<int> value);
    partial void OnFilledByChanged();
    #endregion
	
	public SurveyResponse()
	{
		this._Survey = default(EntityRef<Survey>);
		this._Question = default(EntityRef<Question>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyID", DbType="Int NOT NULL")]
	public int SurveyID
	{
		get
		{
			return this._SurveyID;
		}
		set
		{
			if ((this._SurveyID != value))
			{
				if (this._Survey.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSurveyIDChanging(value);
				this.SendPropertyChanging();
				this._SurveyID = value;
				this.SendPropertyChanged("SurveyID");
				this.OnSurveyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
	public int QuestionID
	{
		get
		{
			return this._QuestionID;
		}
		set
		{
			if ((this._QuestionID != value))
			{
				if (this._Question.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnQuestionIDChanging(value);
				this.SendPropertyChanging();
				this._QuestionID = value;
				this.SendPropertyChanged("QuestionID");
				this.OnQuestionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilledBy", DbType="Int")]
	public System.Nullable<int> FilledBy
	{
		get
		{
			return this._FilledBy;
		}
		set
		{
			if ((this._FilledBy != value))
			{
				this.OnFilledByChanging(value);
				this.SendPropertyChanging();
				this._FilledBy = value;
				this.SendPropertyChanged("FilledBy");
				this.OnFilledByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_SurveyResponse", Storage="_Survey", ThisKey="SurveyID", OtherKey="ID", IsForeignKey=true)]
	public Survey Survey
	{
		get
		{
			return this._Survey.Entity;
		}
		set
		{
			Survey previousValue = this._Survey.Entity;
			if (((previousValue != value) 
						|| (this._Survey.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Survey.Entity = null;
					previousValue.SurveyResponses.Remove(this);
				}
				this._Survey.Entity = value;
				if ((value != null))
				{
					value.SurveyResponses.Add(this);
					this._SurveyID = value.ID;
				}
				else
				{
					this._SurveyID = default(int);
				}
				this.SendPropertyChanged("Survey");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_SurveyResponse", Storage="_Question", ThisKey="QuestionID", OtherKey="ID", IsForeignKey=true)]
	public Question Question
	{
		get
		{
			return this._Question.Entity;
		}
		set
		{
			Question previousValue = this._Question.Entity;
			if (((previousValue != value) 
						|| (this._Question.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Question.Entity = null;
					previousValue.SurveyResponses.Remove(this);
				}
				this._Question.Entity = value;
				if ((value != null))
				{
					value.SurveyResponses.Add(this);
					this._QuestionID = value.ID;
				}
				else
				{
					this._QuestionID = default(int);
				}
				this.SendPropertyChanged("Question");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questions")]
public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Text;
	
	private string _QuestionType;
	
	private string _Options;
	
	private EntitySet<SurveyQuestion> _SurveyQuestions;
	
	private EntitySet<SurveyResponse> _SurveyResponses;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnQuestionTypeChanging(string value);
    partial void OnQuestionTypeChanged();
    partial void OnOptionsChanging(string value);
    partial void OnOptionsChanged();
    #endregion
	
	public Question()
	{
		this._SurveyQuestions = new EntitySet<SurveyQuestion>(new Action<SurveyQuestion>(this.attach_SurveyQuestions), new Action<SurveyQuestion>(this.detach_SurveyQuestions));
		this._SurveyResponses = new EntitySet<SurveyResponse>(new Action<SurveyResponse>(this.attach_SurveyResponses), new Action<SurveyResponse>(this.detach_SurveyResponses));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Text
	{
		get
		{
			return this._Text;
		}
		set
		{
			if ((this._Text != value))
			{
				this.OnTextChanging(value);
				this.SendPropertyChanging();
				this._Text = value;
				this.SendPropertyChanged("Text");
				this.OnTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string QuestionType
	{
		get
		{
			return this._QuestionType;
		}
		set
		{
			if ((this._QuestionType != value))
			{
				this.OnQuestionTypeChanging(value);
				this.SendPropertyChanging();
				this._QuestionType = value;
				this.SendPropertyChanged("QuestionType");
				this.OnQuestionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Options", DbType="NVarChar(MAX)")]
	public string Options
	{
		get
		{
			return this._Options;
		}
		set
		{
			if ((this._Options != value))
			{
				this.OnOptionsChanging(value);
				this.SendPropertyChanging();
				this._Options = value;
				this.SendPropertyChanged("Options");
				this.OnOptionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_SurveyQuestion", Storage="_SurveyQuestions", ThisKey="ID", OtherKey="QuestionID")]
	public EntitySet<SurveyQuestion> SurveyQuestions
	{
		get
		{
			return this._SurveyQuestions;
		}
		set
		{
			this._SurveyQuestions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_SurveyResponse", Storage="_SurveyResponses", ThisKey="ID", OtherKey="QuestionID")]
	public EntitySet<SurveyResponse> SurveyResponses
	{
		get
		{
			return this._SurveyResponses;
		}
		set
		{
			this._SurveyResponses.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SurveyQuestions(SurveyQuestion entity)
	{
		this.SendPropertyChanging();
		entity.Question = this;
	}
	
	private void detach_SurveyQuestions(SurveyQuestion entity)
	{
		this.SendPropertyChanging();
		entity.Question = null;
	}
	
	private void attach_SurveyResponses(SurveyResponse entity)
	{
		this.SendPropertyChanging();
		entity.Question = this;
	}
	
	private void detach_SurveyResponses(SurveyResponse entity)
	{
		this.SendPropertyChanging();
		entity.Question = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.AdminSiteMap")]
public partial class AdminSiteMap
{
	
	private int _ID;
	
	private string _Url;
	
	private string _Title;
	
	private string _Description;
	
	private System.Nullable<int> _ParentID;
	
	private System.Nullable<int> _OrdinalPosition;
	
	public AdminSiteMap()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(100)")]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this._Url = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this._Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this._ParentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdinalPosition", DbType="Int")]
	public System.Nullable<int> OrdinalPosition
	{
		get
		{
			return this._OrdinalPosition;
		}
		set
		{
			if ((this._OrdinalPosition != value))
			{
				this._OrdinalPosition = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.tbl_donations")]
public partial class tbl_donation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _fname;
	
	private string _lname;
	
	private string _email;
	
	private decimal _amount;
	
	private System.DateTime _date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
	
	public tbl_donation()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string lname
	{
		get
		{
			return this._lname;
		}
		set
		{
			if ((this._lname != value))
			{
				this.OnlnameChanging(value);
				this.SendPropertyChanging();
				this._lname = value;
				this.SendPropertyChanged("lname");
				this.OnlnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,0) NOT NULL")]
	public decimal amount
	{
		get
		{
			return this._amount;
		}
		set
		{
			if ((this._amount != value))
			{
				this.OnamountChanging(value);
				this.SendPropertyChanging();
				this._amount = value;
				this.SendPropertyChanged("amount");
				this.OnamountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
	public System.DateTime date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.tbl_services")]
public partial class tbl_service : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _service_id;
	
	private string _title;
	
	private string _description;
	
	private System.Nullable<System.DateTime> _date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
	
	public tbl_service()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int service_id
	{
		get
		{
			return this._service_id;
		}
		set
		{
			if ((this._service_id != value))
			{
				this.Onservice_idChanging(value);
				this.SendPropertyChanging();
				this._service_id = value;
				this.SendPropertyChanged("service_id");
				this.Onservice_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
	public System.Nullable<System.DateTime> date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.tbl_specialties")]
public partial class tbl_specialty : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _specialty_id;
	
	private string _specialty;
	
	private EntitySet<tbl_doctor> _tbl_doctors;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onspecialty_idChanging(int value);
    partial void Onspecialty_idChanged();
    partial void OnspecialtyChanging(string value);
    partial void OnspecialtyChanged();
    #endregion
	
	public tbl_specialty()
	{
		this._tbl_doctors = new EntitySet<tbl_doctor>(new Action<tbl_doctor>(this.attach_tbl_doctors), new Action<tbl_doctor>(this.detach_tbl_doctors));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialty_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int specialty_id
	{
		get
		{
			return this._specialty_id;
		}
		set
		{
			if ((this._specialty_id != value))
			{
				this.Onspecialty_idChanging(value);
				this.SendPropertyChanging();
				this._specialty_id = value;
				this.SendPropertyChanged("specialty_id");
				this.Onspecialty_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string specialty
	{
		get
		{
			return this._specialty;
		}
		set
		{
			if ((this._specialty != value))
			{
				this.OnspecialtyChanging(value);
				this.SendPropertyChanging();
				this._specialty = value;
				this.SendPropertyChanged("specialty");
				this.OnspecialtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_specialty_tbl_doctor", Storage="_tbl_doctors", ThisKey="specialty_id", OtherKey="specialty_id")]
	public EntitySet<tbl_doctor> tbl_doctors
	{
		get
		{
			return this._tbl_doctors;
		}
		set
		{
			this._tbl_doctors.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbl_doctors(tbl_doctor entity)
	{
		this.SendPropertyChanging();
		entity.tbl_specialty = this;
	}
	
	private void detach_tbl_doctors(tbl_doctor entity)
	{
		this.SendPropertyChanging();
		entity.tbl_specialty = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.tbl_doctors")]
public partial class tbl_doctor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _doctor_id;
	
	private string _first_name;
	
	private string _last_name;
	
	private string _gender;
	
	private string _email;
	
	private string _bio;
	
	private int _specialty_id;
	
	private EntityRef<tbl_specialty> _tbl_specialty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondoctor_idChanging(int value);
    partial void Ondoctor_idChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnbioChanging(string value);
    partial void OnbioChanged();
    partial void Onspecialty_idChanging(int value);
    partial void Onspecialty_idChanged();
    #endregion
	
	public tbl_doctor()
	{
		this._tbl_specialty = default(EntityRef<tbl_specialty>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int doctor_id
	{
		get
		{
			return this._doctor_id;
		}
		set
		{
			if ((this._doctor_id != value))
			{
				this.Ondoctor_idChanging(value);
				this.SendPropertyChanging();
				this._doctor_id = value;
				this.SendPropertyChanged("doctor_id");
				this.Ondoctor_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string first_name
	{
		get
		{
			return this._first_name;
		}
		set
		{
			if ((this._first_name != value))
			{
				this.Onfirst_nameChanging(value);
				this.SendPropertyChanging();
				this._first_name = value;
				this.SendPropertyChanged("first_name");
				this.Onfirst_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string last_name
	{
		get
		{
			return this._last_name;
		}
		set
		{
			if ((this._last_name != value))
			{
				this.Onlast_nameChanging(value);
				this.SendPropertyChanging();
				this._last_name = value;
				this.SendPropertyChanged("last_name");
				this.Onlast_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string gender
	{
		get
		{
			return this._gender;
		}
		set
		{
			if ((this._gender != value))
			{
				this.OngenderChanging(value);
				this.SendPropertyChanging();
				this._gender = value;
				this.SendPropertyChanged("gender");
				this.OngenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bio", DbType="VarChar(MAX)")]
	public string bio
	{
		get
		{
			return this._bio;
		}
		set
		{
			if ((this._bio != value))
			{
				this.OnbioChanging(value);
				this.SendPropertyChanging();
				this._bio = value;
				this.SendPropertyChanged("bio");
				this.OnbioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialty_id", DbType="Int NOT NULL")]
	public int specialty_id
	{
		get
		{
			return this._specialty_id;
		}
		set
		{
			if ((this._specialty_id != value))
			{
				if (this._tbl_specialty.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onspecialty_idChanging(value);
				this.SendPropertyChanging();
				this._specialty_id = value;
				this.SendPropertyChanged("specialty_id");
				this.Onspecialty_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_specialty_tbl_doctor", Storage="_tbl_specialty", ThisKey="specialty_id", OtherKey="specialty_id", IsForeignKey=true)]
	public tbl_specialty tbl_specialty
	{
		get
		{
			return this._tbl_specialty.Entity;
		}
		set
		{
			tbl_specialty previousValue = this._tbl_specialty.Entity;
			if (((previousValue != value) 
						|| (this._tbl_specialty.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbl_specialty.Entity = null;
					previousValue.tbl_doctors.Remove(this);
				}
				this._tbl_specialty.Entity = value;
				if ((value != null))
				{
					value.tbl_doctors.Add(this);
					this._specialty_id = value.specialty_id;
				}
				else
				{
					this._specialty_id = default(int);
				}
				this.SendPropertyChanged("tbl_specialty");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="timmins.tbl_subscribers")]
public partial class tbl_subscriber : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _subscriber_id;
	
	private string _name;
	
	private string _email;
	
	private string _valid;
	
	private string _reseanOfunsub;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsubscriber_idChanging(int value);
    partial void Onsubscriber_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnvalidChanging(string value);
    partial void OnvalidChanged();
    partial void OnreseanOfunsubChanging(string value);
    partial void OnreseanOfunsubChanged();
    #endregion
	
	public tbl_subscriber()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscriber_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int subscriber_id
	{
		get
		{
			return this._subscriber_id;
		}
		set
		{
			if ((this._subscriber_id != value))
			{
				this.Onsubscriber_idChanging(value);
				this.SendPropertyChanging();
				this._subscriber_id = value;
				this.SendPropertyChanged("subscriber_id");
				this.Onsubscriber_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string valid
	{
		get
		{
			return this._valid;
		}
		set
		{
			if ((this._valid != value))
			{
				this.OnvalidChanging(value);
				this.SendPropertyChanging();
				this._valid = value;
				this.SendPropertyChanged("valid");
				this.OnvalidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reseanOfunsub", DbType="VarChar(MAX)")]
	public string reseanOfunsub
	{
		get
		{
			return this._reseanOfunsub;
		}
		set
		{
			if ((this._reseanOfunsub != value))
			{
				this.OnreseanOfunsubChanging(value);
				this.SendPropertyChanging();
				this._reseanOfunsub = value;
				this.SendPropertyChanged("reseanOfunsub");
				this.OnreseanOfunsubChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
